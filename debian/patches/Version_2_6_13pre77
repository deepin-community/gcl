Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 gcl (2.6.12-83) unstable; urgency=high
 .
   * Version_2_6_13pre76
   * FIx acl2 arm builds (Closes: #919477).
Author: Camm Maguire <camm@debian.org>
Bug-Debian: https://bugs.debian.org/919477

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2019-02-05

--- gcl-2.6.12.orig/h/elf32_arm_reloc.h
+++ gcl-2.6.12/h/elf32_arm_reloc.h
@@ -18,10 +18,10 @@
     case R_ARM_JUMP24:
       {
 	long x=((long)(s+a-p))/4;
-	if (abs(x)&(~MASK(23))) {/*24?*/
+	if (abs(x)&(~MASK(24))) {
           got+=(sym->st_size-1)*tz;
 	  memcpy(got,tramp,sizeof(tramp));
-	  /*relocate*/
+	  /*recurse on relocate?*/
           got[sizeof(tramp)/sizeof(*got)]=s;
 	  x=((long)got-p)/4;
 	}
@@ -29,8 +29,6 @@
       }
       break;
     case R_ARM_V4BX:
-      add_vals(where,~0L,s+a);
-      break;
     case R_ARM_ABS32:
       add_vals(where,~0L,s+a);
       break;
--- gcl-2.6.12.orig/h/elf32_armhf_reloc.h
+++ gcl-2.6.12/h/elf32_armhf_reloc.h
@@ -4,7 +4,7 @@
      case R_ARM_THM_JUMP24:
       {
     	long x=(long)(s+a-p);
-    	if (1||abs(x)&(~MASK(25))) {
+    	if (abs(x)&(~MASK(24))) {
 
           got+=(sym->st_size-1)*tz;
     	  memcpy(got,tramp,sizeof(tramp));
@@ -32,7 +32,7 @@
     case R_ARM_THM_CALL:
       {
     	long x=(long)(s+a-p);
-    	if (1||abs(x)&(~MASK(23))) {/*24?*/
+    	if (abs(x)&(~MASK(23))) {
           got+=(sym->st_size-1)*tz;
     	  memcpy(got,tramp,sizeof(tramp));
 
