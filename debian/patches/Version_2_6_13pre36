Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 gcl (2.6.12-28) unstable; urgency=medium
 .
   * Version_2_6_13pre35; restore hppa build
Author: Camm Maguire <camm@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- gcl-2.6.12.orig/o/makefile
+++ gcl-2.6.12/o/makefile
@@ -34,7 +34,7 @@ boot.o: boot.c $(DECL) boot.h
 	$(CC) -c $(CFLAGS) $(DEFS) -fPIC $*.c $(AUX_INFO) 
 
 prelink.o: prelink.c $(DECL)
-	$(CC) -fPIE -c $(CFLAGS) $(DEFS) $*.c $(AUX_INFO) 
+	$(CC) -fPIE -c $(filter-out -pg,$(CFLAGS)) $(DEFS) $*.c $(AUX_INFO)
 
 %.o: %.c $(DECL)
 	$(CC) -c $(CFLAGS) $(DEFS) $*.c $(AUX_INFO) 
--- gcl-2.6.12.orig/o/sfasli.c
+++ gcl-2.6.12/o/sfasli.c
@@ -111,46 +111,17 @@ LFD(build_symbol_table)(void) {
 
 }
 
-extern int mcount();
-extern int _mcount();
-extern int __divdi3();
-extern int __moddi3();
-extern int __udivdi3();
-extern int __umoddi3();
-extern void sincos(double,double *,double *);
-extern int __divsi3();
-extern int __modsi3();
-extern int __udivsi3();
-extern int __umodsi3();
-extern int $$divI();
-extern int $$divU();
-extern int $$remI();
-extern int $$remU();
-extern int __divq();
-extern int __divqu();
-extern int __remq();
-extern int __remqu();
-
-#ifndef DARWIN
 #ifndef _WIN32
 int
 use_symbols(double d,...) {
 
-  sincos(d,&d,&d);
-
-#ifdef GCL_GPROF
-  _mcount();
-#endif
-  
-  return (int)d;
+#ifndef DARWIN
+  extern void sincos(double,double *,double *);
 
-}
-#endif
+  sincos(d,&d,&d);
 #else
-int
-use_symbols(double d,...) {
-
   d=sin(d)+cos(d);
+#endif
 
   return (int)d;
 
